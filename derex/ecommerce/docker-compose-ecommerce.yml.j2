version: "3.5"

services:
  ecommerce:
    image: {{ ecommerce_docker_image }}
    container_name: "{{ project.name }}_ecommerce"
    volumes:
      - {{ settings_dir }}:/openedx/ecommerce/ecommerce/settings/derex_project
      {%- if plugins_dirs.get("requirements") %}
      - {{ plugins_dirs.get("requirements") }}:/openedx/derex.requirements
      {% endif %}
      {%- if plugins_dirs.get("fixtures") %}
      - {{ plugins_dirs.get("fixtures") }}:/openedx/fixtures
      {% endif %}
      {%- if plugins_dirs.get("themes") %}
      - {{ plugins_dirs.get("themes") }}:/openedx/themes
      {% endif %}
    {% if project.runmode.value == "debug" -%}
    command:
      sh -c 'exec ./manage.py runserver --noreload 0:80'
    {% else -%}
    command:
      sh -c 'exec gunicorn
        --bind=0.0.0.0:80
        --workers 2
        --max-requests=1000
        ecommerce.wsgi_whitenoise:application'
    {% endif -%}
    environment:
      SERVICE_VARIANT: ecommerce
      DJANGO_SETTINGS_MODULE: ecommerce.settings.derex_project.{{ active_settings }}
      MYSQL_DB_NAME: {{ project.name }}_ecommerce
      MYSQL_DB_PASSWORD: {{ project.secret("mysql") }}
      DEREX_PROJECT: {{ project.name }}
      {%- for key, value in project.get_container_env().items() %}
      {{ key }}: {{ value | tojson }}
      {%- endfor %}
    networks:
      derex:
        aliases:
          - ecommerce.{{ project.name }}.localhost.derex
          - ecommerce.{{ project.name }}.localhost

  ecommerce_worker:
    image: {{ ecommerce_worker_docker_image }}
    container_name: "{{ project.name }}_ecommerce_worker"
    environment:
      C_FORCE_ROOT: 1
      DEREX_PROJECT: {{ project.name }}
    networks:
      derex:

# Since the Ecommerce Service doesn't allow to specificy an internal URL
# to use in server to server communications we are forced to create an alias
# for the LMS hostname
  lms:
    networks:
      derex:
        aliases:
          - {{ project.name }}.localhost
  cms:
    networks:
      derex:
        aliases:
          - studio.{{ project.name }}.localhost
